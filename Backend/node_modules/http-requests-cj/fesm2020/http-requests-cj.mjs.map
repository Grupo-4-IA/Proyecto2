{"version":3,"file":"http-requests-cj.mjs","sources":["../../../projects/http-requests-cj/src/lib/http-requests-cj.service.ts","../../../projects/http-requests-cj/src/public-api.ts","../../../projects/http-requests-cj/src/http-requests-cj.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { lastValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpRequestsCJService {\n  constructor(public http: HttpClient) {}\n\n  private makeParams(params: Params[] | undefined): HttpParams {\n    let param: HttpParams = new HttpParams();\n    for (let i = 0; params !== undefined && i < params.length; i++) {\n      param = param.append(params[i].name, params[i].value);\n    }\n    return param;\n  }\n  private makeHeaders(headers: Header[] | undefined): HttpHeaders {\n    let header: HttpHeaders = new HttpHeaders();\n    for (let i = 0; headers !== undefined && i < headers.length; i++) {\n      header = header.append(headers[i].name, headers[i].value);\n    }\n    return header;\n  }\n\n  /**\n   * Constructs a `GET` request that interprets the body as a JSON object and returns\n   * the response body in a given type.\n   *\n   * @param url      The endpoint URL.\n   * @param params   An HTTP request/response body that represents serialized parameters,it creates a `HttpParams` object.\n   * @param headers  Represents the header configuration options for an HTTP request, it creates a `HttpHeader` object.\n   *\n   * @return A `Promise` of the `HttpResponse`, with a response body in the requested type.\n   */\n\n  async get<T>(url: string, params?: Params[], headers?: Header[]): Promise<T> {\n    let param: HttpParams = this.makeParams(params);\n    let header: HttpHeaders = this.makeHeaders(headers);\n    return await lastValueFrom(\n      this.http.get<T>(url, { params: param, headers: header })\n    );\n  }\n\n  /**\n   * Constructs a `POST` request that interprets the body as a JSON object\n   * and returns an observable of the response.\n   *\n   * @param url The endpoint URL.\n   * @param body The content to replace with.\n   * @param params   An HTTP request/response body that represents serialized parameters,it creates a `HttpParams` object.\n   * @param headers  Represents the header configuration options for an HTTP request, it creates a `HttpHeader` object.\n   *\n   * @return  A `Promise` of the `HttpResponse` for the request, with a response body in the\n   * requested type.\n   */\n\n  async post<T>(\n    url: string,\n    body: any,\n    params?: Params[],\n    headers?: Header[]\n  ): Promise<T> {\n    let param: HttpParams = this.makeParams(params);\n    let header: HttpHeaders = this.makeHeaders(headers);\n\n    return await lastValueFrom(\n      this.http.post<T>(url, body, { params: param, headers: header })\n    );\n  }\n\n  /**\n   * Constructs a `DELETE` request that interprets the body as a JSON object and returns\n   * the response in a given type.\n   *\n   * @param url     The endpoint URL.\n   * @param params   An HTTP request/response body that represents serialized parameters,it creates a `HttpParams` object.\n   * @param headers  Represents the header configuration options for an HTTP request, it creates a `HttpHeader` object.\n   *\n   * @return A `Promise` of the `HttpResponse`, with response body in the requested type.\n   */\n  async delete<T>(\n    url: string,\n    params?: Params[],\n    headers?: Header[]\n  ): Promise<T> {\n    let param: HttpParams = this.makeParams(params);\n    let header: HttpHeaders = this.makeHeaders(headers);\n\n    return await lastValueFrom(\n      this.http.delete<T>(url, { params: param, headers: header })\n    );\n  }\n\n  /**\n   * Constructs a `PUT` request that interprets the body as an instance of the requested type\n   * and returns an observable of the requested type.\n   *\n   * @param url The endpoint URL.\n   * @param body The resources to add/update.\n   * @param params   An HTTP request/response body that represents serialized parameters,it creates a `HttpParams` object.\n   * @param headers  Represents the header configuration options for an HTTP request, it creates a `HttpHeader` object.\n   *\n   * @return A `Promise` of the requested type.\n   */\n\n  async put<T>(\n    url: string,\n    body: any,\n    params?: Params[],\n    headers?: Header[]\n  ): Promise<T> {\n    let param: HttpParams = this.makeParams(params);\n    let header: HttpHeaders = this.makeHeaders(headers);\n\n    return await lastValueFrom(\n      this.http.put<T>(url, body, { params: param, headers: header })\n    );\n  }\n}\n\nexport type Params = {\n  name: string;\n  value: string | number | boolean;\n};\n\nexport type Header = {\n  name: string;\n  value: string | string[];\n};\n","/*\n * Public API Surface of http-requests-cj\n */\n\nexport { HttpRequestsCJService } from './lib/http-requests-cj.service';\n\n// <reference path='./lib/index.ts'/>","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}